{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/becaree/.cargo/registry/src/github.com-1ecc6299db9ec823/boolinator-2.4.0","program":"/home/becaree/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","boolinator","/home/becaree/.cargo/registry/src/github.com-1ecc6299db9ec823/boolinator-2.4.0/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata,link","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=8a0c5c412025bb47","-C","extra-filename=-8a0c5c412025bb47","--out-dir","/home/becaree/Projects/todo-list/frontend/target/rls/debug/deps","-L","dependency=/home/becaree/Projects/todo-list/frontend/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/home/becaree/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu"],"output":"/home/becaree/Projects/todo-list/frontend/target/rls/debug/deps/libboolinator-8a0c5c412025bb47.rmeta"},"prelude":{"crate_id":{"name":"boolinator","disambiguator":[3194390565972082764,0]},"crate_root":"/home/becaree/.cargo/registry/src/github.com-1ecc6299db9ec823/boolinator-2.4.0/src","external_crates":[{"file_name":"/home/becaree/.cargo/registry/src/github.com-1ecc6299db9ec823/boolinator-2.4.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[13660052763764438209,0]}},{"file_name":"/home/becaree/.cargo/registry/src/github.com-1ecc6299db9ec823/boolinator-2.4.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[9739760674751855475,0]}},{"file_name":"/home/becaree/.cargo/registry/src/github.com-1ecc6299db9ec823/boolinator-2.4.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[575616478876193178,0]}},{"file_name":"/home/becaree/.cargo/registry/src/github.com-1ecc6299db9ec823/boolinator-2.4.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[3893536895741113830,0]}},{"file_name":"/home/becaree/.cargo/registry/src/github.com-1ecc6299db9ec823/boolinator-2.4.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[8333469902287224697,0]}},{"file_name":"/home/becaree/.cargo/registry/src/github.com-1ecc6299db9ec823/boolinator-2.4.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[16838805147834024917,0]}},{"file_name":"/home/becaree/.cargo/registry/src/github.com-1ecc6299db9ec823/boolinator-2.4.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[3421102034803421832,0]}},{"file_name":"/home/becaree/.cargo/registry/src/github.com-1ecc6299db9ec823/boolinator-2.4.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[13917205122551333146,0]}},{"file_name":"/home/becaree/.cargo/registry/src/github.com-1ecc6299db9ec823/boolinator-2.4.0/src/lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[17656929163753938186,0]}},{"file_name":"/home/becaree/.cargo/registry/src/github.com-1ecc6299db9ec823/boolinator-2.4.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[8807118801232190645,0]}},{"file_name":"/home/becaree/.cargo/registry/src/github.com-1ecc6299db9ec823/boolinator-2.4.0/src/lib.rs","num":11,"id":{"name":"adler","disambiguator":[4737794521424580227,0]}},{"file_name":"/home/becaree/.cargo/registry/src/github.com-1ecc6299db9ec823/boolinator-2.4.0/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[13305028174797567073,0]}},{"file_name":"/home/becaree/.cargo/registry/src/github.com-1ecc6299db9ec823/boolinator-2.4.0/src/lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[11728688866819547392,0]}},{"file_name":"/home/becaree/.cargo/registry/src/github.com-1ecc6299db9ec823/boolinator-2.4.0/src/lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[18434100453067741661,0]}},{"file_name":"/home/becaree/.cargo/registry/src/github.com-1ecc6299db9ec823/boolinator-2.4.0/src/lib.rs","num":15,"id":{"name":"addr2line","disambiguator":[1400632937232707036,0]}},{"file_name":"/home/becaree/.cargo/registry/src/github.com-1ecc6299db9ec823/boolinator-2.4.0/src/lib.rs","num":16,"id":{"name":"gimli","disambiguator":[16961597338492754212,0]}},{"file_name":"/home/becaree/.cargo/registry/src/github.com-1ecc6299db9ec823/boolinator-2.4.0/src/lib.rs","num":17,"id":{"name":"object","disambiguator":[17609613411998862804,0]}},{"file_name":"/home/becaree/.cargo/registry/src/github.com-1ecc6299db9ec823/boolinator-2.4.0/src/lib.rs","num":18,"id":{"name":"memchr","disambiguator":[4627950844093692127,0]}},{"file_name":"/home/becaree/.cargo/registry/src/github.com-1ecc6299db9ec823/boolinator-2.4.0/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[1141542575232288590,0]}}],"span":{"file_name":"/home/becaree/.cargo/registry/src/github.com-1ecc6299db9ec823/boolinator-2.4.0/src/lib.rs","byte_start":362,"byte_end":7249,"line_start":10,"line_end":260,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/becaree/.cargo/registry/src/github.com-1ecc6299db9ec823/boolinator-2.4.0/src/lib.rs","byte_start":362,"byte_end":7249,"line_start":10,"line_end":260,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/becaree/.cargo/registry/src/github.com-1ecc6299db9ec823/boolinator-2.4.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":29}],"decl_id":null,"docs":"\nProvides the [`Boolinator`](trait.Boolinator.html) trait, which lets you use `Option` and `Result`-style combinators with `bool`s.","sig":null,"attributes":[{"value":"*\n\nProvides the [`Boolinator`](trait.Boolinator.html) trait, which lets you use `Option` and `Result`-style combinators with `bool`s.\n\n<style type=\"text/css\">\n.link-block { font-family: \"Fira Sans\"; }\n.link-block > p { display: inline-block; }\n.link-block > p > strong { font-weight: 500; margin-right: 1em; }\n.link-block > ul { display: inline-block; padding: 0; list-style: none; }\n.link-block > ul > li {\n  font-size: 0.8em;\n  background-color: #eee;\n  border: 1px solid #ccc;\n  padding: 0.3em;\n  display: inline-block;\n}\n</style>\n<span></span><div class=\"link-block\">\n\n**Links**\n\n* [Latest Release](https://crates.io/crates/boolinator/)\n* [Latest Docs](https://danielkeep.github.io/rust-boolinator/doc/boolinator/index.html)\n* [Repository](https://github.com/DanielKeep/rust-boolinator)\n\n<span></span></div>\n\n## Compatibility\n\n`boolinator` is tested against Rust 1.0+.  *Exhaustively* so.\n\n*/","span":{"file_name":"/home/becaree/.cargo/registry/src/github.com-1ecc6299db9ec823/boolinator-2.4.0/src/lib.rs","byte_start":362,"byte_end":1260,"line_start":10,"line_end":41,"column_start":1,"column_end":3}},{"value":"deny(missing_docs)","span":{"file_name":"/home/becaree/.cargo/registry/src/github.com-1ecc6299db9ec823/boolinator-2.4.0/src/lib.rs","byte_start":1304,"byte_end":1326,"line_start":43,"line_end":43,"column_start":1,"column_end":23}}]},{"kind":"Trait","id":{"krate":0,"index":3},"span":{"file_name":"/home/becaree/.cargo/registry/src/github.com-1ecc6299db9ec823/boolinator-2.4.0/src/lib.rs","byte_start":1516,"byte_end":1526,"line_start":50,"line_end":50,"column_start":11,"column_end":21},"name":"Boolinator","qualname":"::Boolinator","value":"Boolinator: Sized","parent":null,"children":[{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":7},{"krate":0,"index":10},{"krate":0,"index":12},{"krate":0,"index":15},{"krate":0,"index":18},{"krate":0,"index":23},{"krate":0,"index":25},{"krate":0,"index":28}],"decl_id":null,"docs":"This trait defines a number of combinator-style methods for use with `bool` values.","sig":null,"attributes":[{"value":"*\nThis trait defines a number of combinator-style methods for use with `bool` values.\n\nIn general, `true`/`false` map to `Some(_)`/`None` and `Ok(_)`/`Err(_)` respectively.\n*/","span":{"file_name":"/home/becaree/.cargo/registry/src/github.com-1ecc6299db9ec823/boolinator-2.4.0/src/lib.rs","byte_start":1328,"byte_end":1505,"line_start":45,"line_end":49,"column_start":1,"column_end":3}}]},{"kind":"Method","id":{"krate":0,"index":4},"span":{"file_name":"/home/becaree/.cargo/registry/src/github.com-1ecc6299db9ec823/boolinator-2.4.0/src/lib.rs","byte_start":1625,"byte_end":1634,"line_start":54,"line_end":54,"column_start":8,"column_end":17},"name":"as_option","qualname":"::Boolinator::as_option","value":"fn as_option(Self) -> Option<()>","parent":{"krate":0,"index":3},"children":[],"decl_id":null,"docs":"    If this value is `true`, returns `Some(())`; `None` otherwise.\n    \n","sig":null,"attributes":[{"value":"*\n    If this value is `true`, returns `Some(())`; `None` otherwise.\n    */","span":{"file_name":"/home/becaree/.cargo/registry/src/github.com-1ecc6299db9ec823/boolinator-2.4.0/src/lib.rs","byte_start":1540,"byte_end":1617,"line_start":51,"line_end":53,"column_start":5,"column_end":7}}]},{"kind":"Method","id":{"krate":0,"index":5},"span":{"file_name":"/home/becaree/.cargo/registry/src/github.com-1ecc6299db9ec823/boolinator-2.4.0/src/lib.rs","byte_start":1748,"byte_end":1755,"line_start":59,"line_end":59,"column_start":8,"column_end":15},"name":"as_some","qualname":"::Boolinator::as_some","value":"fn as_some<T>(Self, T) -> Option<T>","parent":{"krate":0,"index":3},"children":[],"decl_id":null,"docs":"    If this value is `true`, returns `Some(some)`; `None` otherwise.\n    \n","sig":null,"attributes":[{"value":"*\n    If this value is `true`, returns `Some(some)`; `None` otherwise.\n    */","span":{"file_name":"/home/becaree/.cargo/registry/src/github.com-1ecc6299db9ec823/boolinator-2.4.0/src/lib.rs","byte_start":1661,"byte_end":1740,"line_start":56,"line_end":58,"column_start":5,"column_end":7}}]},{"kind":"Method","id":{"krate":0,"index":7},"span":{"file_name":"/home/becaree/.cargo/registry/src/github.com-1ecc6299db9ec823/boolinator-2.4.0/src/lib.rs","byte_start":1883,"byte_end":1895,"line_start":64,"line_end":64,"column_start":8,"column_end":20},"name":"as_some_from","qualname":"::Boolinator::as_some_from","value":"fn as_some_from<T, F>(Self, F) -> Option<T> where F: FnOnce() -> T","parent":{"krate":0,"index":3},"children":[],"decl_id":null,"docs":"    If this value is `true`, returns `Some(some())`; `None` otherwise. \n    \n","sig":null,"attributes":[{"value":"*\n    If this value is `true`, returns `Some(some())`; `None` otherwise. \n    */","span":{"file_name":"/home/becaree/.cargo/registry/src/github.com-1ecc6299db9ec823/boolinator-2.4.0/src/lib.rs","byte_start":1793,"byte_end":1875,"line_start":61,"line_end":63,"column_start":5,"column_end":7}}]},{"kind":"Method","id":{"krate":0,"index":10},"span":{"file_name":"/home/becaree/.cargo/registry/src/github.com-1ecc6299db9ec823/boolinator-2.4.0/src/lib.rs","byte_start":2044,"byte_end":2054,"line_start":70,"line_end":70,"column_start":8,"column_end":18},"name":"and_option","qualname":"::Boolinator::and_option","value":"fn and_option<T>(Self, Option<T>) -> Option<T>","parent":{"krate":0,"index":3},"children":[],"decl_id":null,"docs":"    If this value is `true`, returns `opt`; `None` otherwise. \n    \n","sig":null,"attributes":[{"value":"*\n    If this value is `true`, returns `opt`; `None` otherwise. \n    */","span":{"file_name":"/home/becaree/.cargo/registry/src/github.com-1ecc6299db9ec823/boolinator-2.4.0/src/lib.rs","byte_start":1963,"byte_end":2036,"line_start":67,"line_end":69,"column_start":5,"column_end":7}}]},{"kind":"Method","id":{"krate":0,"index":12},"span":{"file_name":"/home/becaree/.cargo/registry/src/github.com-1ecc6299db9ec823/boolinator-2.4.0/src/lib.rs","byte_start":2182,"byte_end":2197,"line_start":75,"line_end":75,"column_start":8,"column_end":23},"name":"and_option_from","qualname":"::Boolinator::and_option_from","value":"fn and_option_from<T, F>(Self, F) -> Option<T> where F: FnOnce() -> Option<T>","parent":{"krate":0,"index":3},"children":[],"decl_id":null,"docs":"    If this value is `true`, returns `opt()`; `None` otherwise. \n    \n","sig":null,"attributes":[{"value":"*\n    If this value is `true`, returns `opt()`; `None` otherwise. \n    */","span":{"file_name":"/home/becaree/.cargo/registry/src/github.com-1ecc6299db9ec823/boolinator-2.4.0/src/lib.rs","byte_start":2099,"byte_end":2174,"line_start":72,"line_end":74,"column_start":5,"column_end":7}}]},{"kind":"Method","id":{"krate":0,"index":15},"span":{"file_name":"/home/becaree/.cargo/registry/src/github.com-1ecc6299db9ec823/boolinator-2.4.0/src/lib.rs","byte_start":2360,"byte_end":2369,"line_start":81,"line_end":81,"column_start":8,"column_end":17},"name":"as_result","qualname":"::Boolinator::as_result","value":"fn as_result<T, E>(Self, T, E) -> Result<T, E>","parent":{"krate":0,"index":3},"children":[],"decl_id":null,"docs":"    If this value is `true`, returns `Ok(ok)`; `Err(err)` otherwise. \n    \n","sig":null,"attributes":[{"value":"*\n    If this value is `true`, returns `Ok(ok)`; `Err(err)` otherwise. \n    */","span":{"file_name":"/home/becaree/.cargo/registry/src/github.com-1ecc6299db9ec823/boolinator-2.4.0/src/lib.rs","byte_start":2272,"byte_end":2352,"line_start":78,"line_end":80,"column_start":5,"column_end":7}}]},{"kind":"Method","id":{"krate":0,"index":18},"span":{"file_name":"/home/becaree/.cargo/registry/src/github.com-1ecc6299db9ec823/boolinator-2.4.0/src/lib.rs","byte_start":2511,"byte_end":2525,"line_start":86,"line_end":86,"column_start":8,"column_end":22},"name":"as_result_from","qualname":"::Boolinator::as_result_from","value":"fn as_result_from<T, E, F, G>(Self, F, G) -> Result<T, E> where F: FnOnce() ->\nT, G: FnOnce() -> E","parent":{"krate":0,"index":3},"children":[],"decl_id":null,"docs":"    If this value is `true`, returns `Ok(ok())`; `Err(err())` otherwise. \n    \n","sig":null,"attributes":[{"value":"*\n    If this value is `true`, returns `Ok(ok())`; `Err(err())` otherwise. \n    */","span":{"file_name":"/home/becaree/.cargo/registry/src/github.com-1ecc6299db9ec823/boolinator-2.4.0/src/lib.rs","byte_start":2419,"byte_end":2503,"line_start":83,"line_end":85,"column_start":5,"column_end":7}}]},{"kind":"Method","id":{"krate":0,"index":23},"span":{"file_name":"/home/becaree/.cargo/registry/src/github.com-1ecc6299db9ec823/boolinator-2.4.0/src/lib.rs","byte_start":2713,"byte_end":2718,"line_start":92,"line_end":92,"column_start":8,"column_end":13},"name":"ok_or","qualname":"::Boolinator::ok_or","value":"fn ok_or<E>(Self, E) -> Result<(), E>","parent":{"krate":0,"index":3},"children":[],"decl_id":null,"docs":"    If this value is `true`, returns `Ok(())`; `Err(err)` otherwise.\n    \n","sig":null,"attributes":[{"value":"*\n    If this value is `true`, returns `Ok(())`; `Err(err)` otherwise.\n    */","span":{"file_name":"/home/becaree/.cargo/registry/src/github.com-1ecc6299db9ec823/boolinator-2.4.0/src/lib.rs","byte_start":2626,"byte_end":2705,"line_start":89,"line_end":91,"column_start":5,"column_end":7}}]},{"kind":"Method","id":{"krate":0,"index":25},"span":{"file_name":"/home/becaree/.cargo/registry/src/github.com-1ecc6299db9ec823/boolinator-2.4.0/src/lib.rs","byte_start":2848,"byte_end":2858,"line_start":97,"line_end":97,"column_start":8,"column_end":18},"name":"ok_or_else","qualname":"::Boolinator::ok_or_else","value":"fn ok_or_else<E, G>(Self, G) -> Result<(), E> where G: FnOnce() -> E","parent":{"krate":0,"index":3},"children":[],"decl_id":null,"docs":"    If this value is `true`, returns `Ok(())`; `Err(err())` otherwise.\n    \n","sig":null,"attributes":[{"value":"*\n    If this value is `true`, returns `Ok(())`; `Err(err())` otherwise.\n    */","span":{"file_name":"/home/becaree/.cargo/registry/src/github.com-1ecc6299db9ec823/boolinator-2.4.0/src/lib.rs","byte_start":2759,"byte_end":2840,"line_start":94,"line_end":96,"column_start":5,"column_end":7}}]},{"kind":"Method","id":{"krate":0,"index":28},"span":{"file_name":"/home/becaree/.cargo/registry/src/github.com-1ecc6299db9ec823/boolinator-2.4.0/src/lib.rs","byte_start":3019,"byte_end":3025,"line_start":103,"line_end":103,"column_start":8,"column_end":14},"name":"expect","qualname":"::Boolinator::expect","value":"fn expect(Self, &str)","parent":{"krate":0,"index":3},"children":[],"decl_id":null,"docs":"    If this value is `true`, panics with `msg`; does nothing otherwise.\n    \n","sig":null,"attributes":[{"value":"*\n    If this value is `true`, panics with `msg`; does nothing otherwise.\n    */","span":{"file_name":"/home/becaree/.cargo/registry/src/github.com-1ecc6299db9ec823/boolinator-2.4.0/src/lib.rs","byte_start":2929,"byte_end":3011,"line_start":100,"line_end":102,"column_start":5,"column_end":7}}]},{"kind":"Method","id":{"krate":0,"index":30},"span":{"file_name":"/home/becaree/.cargo/registry/src/github.com-1ecc6299db9ec823/boolinator-2.4.0/src/lib.rs","byte_start":3095,"byte_end":3104,"line_start":108,"line_end":108,"column_start":8,"column_end":17},"name":"as_option","qualname":"<bool as Boolinator>::as_option","value":"fn as_option(Self) -> Option<()>","parent":{"krate":0,"index":3},"children":[],"decl_id":{"krate":0,"index":4},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/becaree/.cargo/registry/src/github.com-1ecc6299db9ec823/boolinator-2.4.0/src/lib.rs","byte_start":3078,"byte_end":3087,"line_start":107,"line_end":107,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":31},"span":{"file_name":"/home/becaree/.cargo/registry/src/github.com-1ecc6299db9ec823/boolinator-2.4.0/src/lib.rs","byte_start":3198,"byte_end":3205,"line_start":113,"line_end":113,"column_start":8,"column_end":15},"name":"as_some","qualname":"<bool as Boolinator>::as_some","value":"fn as_some<T>(Self, T) -> Option<T>","parent":{"krate":0,"index":3},"children":[],"decl_id":{"krate":0,"index":5},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/becaree/.cargo/registry/src/github.com-1ecc6299db9ec823/boolinator-2.4.0/src/lib.rs","byte_start":3181,"byte_end":3190,"line_start":112,"line_end":112,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":33},"span":{"file_name":"/home/becaree/.cargo/registry/src/github.com-1ecc6299db9ec823/boolinator-2.4.0/src/lib.rs","byte_start":3312,"byte_end":3324,"line_start":118,"line_end":118,"column_start":8,"column_end":20},"name":"as_some_from","qualname":"<bool as Boolinator>::as_some_from","value":"fn as_some_from<T, F>(Self, F) -> Option<T> where F: FnOnce() -> T","parent":{"krate":0,"index":3},"children":[],"decl_id":{"krate":0,"index":7},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/becaree/.cargo/registry/src/github.com-1ecc6299db9ec823/boolinator-2.4.0/src/lib.rs","byte_start":3295,"byte_end":3304,"line_start":117,"line_end":117,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":36},"span":{"file_name":"/home/becaree/.cargo/registry/src/github.com-1ecc6299db9ec823/boolinator-2.4.0/src/lib.rs","byte_start":3463,"byte_end":3473,"line_start":124,"line_end":124,"column_start":8,"column_end":18},"name":"and_option","qualname":"<bool as Boolinator>::and_option","value":"fn and_option<T>(Self, Option<T>) -> Option<T>","parent":{"krate":0,"index":3},"children":[],"decl_id":{"krate":0,"index":10},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/becaree/.cargo/registry/src/github.com-1ecc6299db9ec823/boolinator-2.4.0/src/lib.rs","byte_start":3446,"byte_end":3455,"line_start":123,"line_end":123,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":38},"span":{"file_name":"/home/becaree/.cargo/registry/src/github.com-1ecc6299db9ec823/boolinator-2.4.0/src/lib.rs","byte_start":3580,"byte_end":3595,"line_start":129,"line_end":129,"column_start":8,"column_end":23},"name":"and_option_from","qualname":"<bool as Boolinator>::and_option_from","value":"fn and_option_from<T, F>(Self, F) -> Option<T> where F: FnOnce() -> Option<T>","parent":{"krate":0,"index":3},"children":[],"decl_id":{"krate":0,"index":12},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/becaree/.cargo/registry/src/github.com-1ecc6299db9ec823/boolinator-2.4.0/src/lib.rs","byte_start":3563,"byte_end":3572,"line_start":128,"line_end":128,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":41},"span":{"file_name":"/home/becaree/.cargo/registry/src/github.com-1ecc6299db9ec823/boolinator-2.4.0/src/lib.rs","byte_start":3734,"byte_end":3743,"line_start":135,"line_end":135,"column_start":8,"column_end":17},"name":"as_result","qualname":"<bool as Boolinator>::as_result","value":"fn as_result<T, E>(Self, T, E) -> Result<T, E>","parent":{"krate":0,"index":3},"children":[],"decl_id":{"krate":0,"index":15},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/becaree/.cargo/registry/src/github.com-1ecc6299db9ec823/boolinator-2.4.0/src/lib.rs","byte_start":3717,"byte_end":3726,"line_start":134,"line_end":134,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":44},"span":{"file_name":"/home/becaree/.cargo/registry/src/github.com-1ecc6299db9ec823/boolinator-2.4.0/src/lib.rs","byte_start":3862,"byte_end":3876,"line_start":140,"line_end":140,"column_start":8,"column_end":22},"name":"as_result_from","qualname":"<bool as Boolinator>::as_result_from","value":"fn as_result_from<T, E, F, G>(Self, F, G) -> Result<T, E> where F: FnOnce() ->\nT, G: FnOnce() -> E","parent":{"krate":0,"index":3},"children":[],"decl_id":{"krate":0,"index":18},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/becaree/.cargo/registry/src/github.com-1ecc6299db9ec823/boolinator-2.4.0/src/lib.rs","byte_start":3845,"byte_end":3854,"line_start":139,"line_end":139,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":49},"span":{"file_name":"/home/becaree/.cargo/registry/src/github.com-1ecc6299db9ec823/boolinator-2.4.0/src/lib.rs","byte_start":4050,"byte_end":4055,"line_start":146,"line_end":146,"column_start":8,"column_end":13},"name":"ok_or","qualname":"<bool as Boolinator>::ok_or","value":"fn ok_or<E>(Self, E) -> Result<(), E>","parent":{"krate":0,"index":3},"children":[],"decl_id":{"krate":0,"index":23},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/becaree/.cargo/registry/src/github.com-1ecc6299db9ec823/boolinator-2.4.0/src/lib.rs","byte_start":4033,"byte_end":4042,"line_start":145,"line_end":145,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":51},"span":{"file_name":"/home/becaree/.cargo/registry/src/github.com-1ecc6299db9ec823/boolinator-2.4.0/src/lib.rs","byte_start":4165,"byte_end":4175,"line_start":151,"line_end":151,"column_start":8,"column_end":18},"name":"ok_or_else","qualname":"<bool as Boolinator>::ok_or_else","value":"fn ok_or_else<E, G>(Self, G) -> Result<(), E> where G: FnOnce() -> E","parent":{"krate":0,"index":3},"children":[],"decl_id":{"krate":0,"index":25},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/becaree/.cargo/registry/src/github.com-1ecc6299db9ec823/boolinator-2.4.0/src/lib.rs","byte_start":4148,"byte_end":4157,"line_start":150,"line_end":150,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":54},"span":{"file_name":"/home/becaree/.cargo/registry/src/github.com-1ecc6299db9ec823/boolinator-2.4.0/src/lib.rs","byte_start":4321,"byte_end":4327,"line_start":157,"line_end":157,"column_start":8,"column_end":14},"name":"expect","qualname":"<bool as Boolinator>::expect","value":"fn expect(Self, &str)","parent":{"krate":0,"index":3},"children":[],"decl_id":{"krate":0,"index":28},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/becaree/.cargo/registry/src/github.com-1ecc6299db9ec823/boolinator-2.4.0/src/lib.rs","byte_start":4304,"byte_end":4313,"line_start":156,"line_end":156,"column_start":5,"column_end":14}}]}],"impls":[],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/becaree/.cargo/registry/src/github.com-1ecc6299db9ec823/boolinator-2.4.0/src/lib.rs","byte_start":1528,"byte_end":1533,"line_start":50,"line_end":50,"column_start":23,"column_end":28},"kind":"SuperTrait","from":{"krate":2,"index":3179},"to":{"krate":0,"index":3}}]}